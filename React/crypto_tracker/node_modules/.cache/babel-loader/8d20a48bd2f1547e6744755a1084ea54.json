{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateByAngle = rotateByAngle;\n\nfunction rotateByAngle(position) {\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (angle === 0) {\n    return position;\n  }\n\n  var x = position.x,\n      y = position.y;\n  var angleInRadians = Math.PI / 180 * angle;\n  var rotatedX = x * Math.cos(angleInRadians) + y * Math.sin(angleInRadians);\n  var rotatedY = y * Math.cos(angleInRadians) - x * Math.sin(angleInRadians);\n  return {\n    x: rotatedX,\n    y: rotatedY\n  };\n}","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/node_modules/vanilla-swipe/lib/utils/rotateByAngle.js"],"names":["Object","defineProperty","exports","value","rotateByAngle","position","angle","arguments","length","undefined","x","y","angleInRadians","Math","PI","rotatedX","cos","sin","rotatedY"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,MAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAhF;;AAEA,MAAID,KAAK,KAAK,CAAd,EAAiB;AACf,WAAOD,QAAP;AACD;;AAED,MAAIK,CAAC,GAAGL,QAAQ,CAACK,CAAjB;AAAA,MACIC,CAAC,GAAGN,QAAQ,CAACM,CADjB;AAEA,MAAIC,cAAc,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAV,GAAgBR,KAArC;AACA,MAAIS,QAAQ,GAAGL,CAAC,GAAGG,IAAI,CAACG,GAAL,CAASJ,cAAT,CAAJ,GAA+BD,CAAC,GAAGE,IAAI,CAACI,GAAL,CAASL,cAAT,CAAlD;AACA,MAAIM,QAAQ,GAAGP,CAAC,GAAGE,IAAI,CAACG,GAAL,CAASJ,cAAT,CAAJ,GAA+BF,CAAC,GAAGG,IAAI,CAACI,GAAL,CAASL,cAAT,CAAlD;AACA,SAAO;AACLF,IAAAA,CAAC,EAAEK,QADE;AAELJ,IAAAA,CAAC,EAAEO;AAFE,GAAP;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateByAngle = rotateByAngle;\n\nfunction rotateByAngle(position) {\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (angle === 0) {\n    return position;\n  }\n\n  var x = position.x,\n      y = position.y;\n  var angleInRadians = Math.PI / 180 * angle;\n  var rotatedX = x * Math.cos(angleInRadians) + y * Math.sin(angleInRadians);\n  var rotatedY = y * Math.cos(angleInRadians) - x * Math.sin(angleInRadians);\n  return {\n    x: rotatedX,\n    y: rotatedY\n  };\n}"]},"metadata":{},"sourceType":"script"}