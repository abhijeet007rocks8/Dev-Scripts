{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = processNodes;\n\nvar _isEmptyTextNode = require('./utils/isEmptyTextNode');\n\nvar _isEmptyTextNode2 = _interopRequireDefault(_isEmptyTextNode);\n\nvar _convertNodeToElement = require('./convertNodeToElement');\n\nvar _convertNodeToElement2 = _interopRequireDefault(_convertNodeToElement);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Processes the nodes generated by htmlparser2 and convert them all into React elements\n *\n * @param {Object[]} nodes List of nodes to process\n * @param {Function} transform Transform function to optionally apply to nodes\n * @returns {React.Element[]} The list of processed React elements\n */\n\n\nfunction processNodes(nodes, transform) {\n  return nodes.filter(function (node) {\n    return !(0, _isEmptyTextNode2.default)(node);\n  }).map(function (node, index) {\n    // return the result of the transform function if applicable\n    var transformed = void 0;\n\n    if (typeof transform === 'function') {\n      transformed = transform(node, index);\n\n      if (transformed === null || !!transformed) {\n        return transformed;\n      }\n    } // otherwise convert the node as standard\n\n\n    return (0, _convertNodeToElement2.default)(node, index, transform);\n  });\n}","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/node_modules/react-html-parser/lib/processNodes.js"],"names":["Object","defineProperty","exports","value","default","processNodes","_isEmptyTextNode","require","_isEmptyTextNode2","_interopRequireDefault","_convertNodeToElement","_convertNodeToElement2","obj","__esModule","nodes","transform","filter","node","map","index","transformed"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,yBAAD,CAA9B;;AAEA,IAAIC,iBAAiB,GAAGC,sBAAsB,CAACH,gBAAD,CAA9C;;AAEA,IAAII,qBAAqB,GAAGH,OAAO,CAAC,wBAAD,CAAnC;;AAEA,IAAII,sBAAsB,GAAGF,sBAAsB,CAACC,qBAAD,CAAnD;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,YAAT,CAAsBS,KAAtB,EAA6BC,SAA7B,EAAwC;AAEtC,SAAOD,KAAK,CAACE,MAAN,CAAa,UAAUC,IAAV,EAAgB;AAClC,WAAO,CAAC,CAAC,GAAGT,iBAAiB,CAACJ,OAAtB,EAA+Ba,IAA/B,CAAR;AACD,GAFM,EAEJC,GAFI,CAEA,UAAUD,IAAV,EAAgBE,KAAhB,EAAuB;AAE5B;AACA,QAAIC,WAAW,GAAG,KAAK,CAAvB;;AACA,QAAI,OAAOL,SAAP,KAAqB,UAAzB,EAAqC;AACnCK,MAAAA,WAAW,GAAGL,SAAS,CAACE,IAAD,EAAOE,KAAP,CAAvB;;AACA,UAAIC,WAAW,KAAK,IAAhB,IAAwB,CAAC,CAACA,WAA9B,EAA2C;AACzC,eAAOA,WAAP;AACD;AACF,KAT2B,CAW5B;;;AACA,WAAO,CAAC,GAAGT,sBAAsB,CAACP,OAA3B,EAAoCa,IAApC,EAA0CE,KAA1C,EAAiDJ,SAAjD,CAAP;AACD,GAfM,CAAP;AAgBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = processNodes;\n\nvar _isEmptyTextNode = require('./utils/isEmptyTextNode');\n\nvar _isEmptyTextNode2 = _interopRequireDefault(_isEmptyTextNode);\n\nvar _convertNodeToElement = require('./convertNodeToElement');\n\nvar _convertNodeToElement2 = _interopRequireDefault(_convertNodeToElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Processes the nodes generated by htmlparser2 and convert them all into React elements\n *\n * @param {Object[]} nodes List of nodes to process\n * @param {Function} transform Transform function to optionally apply to nodes\n * @returns {React.Element[]} The list of processed React elements\n */\nfunction processNodes(nodes, transform) {\n\n  return nodes.filter(function (node) {\n    return !(0, _isEmptyTextNode2.default)(node);\n  }).map(function (node, index) {\n\n    // return the result of the transform function if applicable\n    var transformed = void 0;\n    if (typeof transform === 'function') {\n      transformed = transform(node, index);\n      if (transformed === null || !!transformed) {\n        return transformed;\n      }\n    }\n\n    // otherwise convert the node as standard\n    return (0, _convertNodeToElement2.default)(node, index, transform);\n  });\n}"]},"metadata":{},"sourceType":"script"}