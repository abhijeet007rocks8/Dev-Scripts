{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\n\nvar skipCamelCase = function (property) {\n  return !property || NO_HYPHEN_REGEX.test(property) || CUSTOM_PROPERTY_REGEX.test(property);\n};\n\nvar capitalize = function (match, character) {\n  return character.toUpperCase();\n};\n\nvar trimHyphen = function (match, prefix) {\n  return prefix + \"-\";\n};\n\nvar camelCase = function (property, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (!options.reactCompat) {\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n\nexports.camelCase = camelCase;","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/crypto_tracker/node_modules/style-to-js/cjs/utilities.js"],"names":["exports","__esModule","camelCase","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","skipCamelCase","property","test","capitalize","match","character","toUpperCase","trimHyphen","prefix","options","toLowerCase","reactCompat","replace"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;AACA,IAAIC,qBAAqB,GAAG,mBAA5B;AACA,IAAIC,YAAY,GAAG,WAAnB;AACA,IAAIC,eAAe,GAAG,SAAtB;AACA,IAAIC,mBAAmB,GAAG,4BAA1B;;AACA,IAAIC,aAAa,GAAG,UAAUC,QAAV,EAAoB;AACpC,SAAO,CAACA,QAAD,IACHH,eAAe,CAACI,IAAhB,CAAqBD,QAArB,CADG,IAEHL,qBAAqB,CAACM,IAAtB,CAA2BD,QAA3B,CAFJ;AAGH,CAJD;;AAKA,IAAIE,UAAU,GAAG,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;AACzC,SAAOA,SAAS,CAACC,WAAV,EAAP;AACH,CAFD;;AAGA,IAAIC,UAAU,GAAG,UAAUH,KAAV,EAAiBI,MAAjB,EAAyB;AAAE,SAAOA,MAAM,GAAG,GAAhB;AAAsB,CAAlE;;AACA,IAAIb,SAAS,GAAG,UAAUM,QAAV,EAAoBQ,OAApB,EAA6B;AACzC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIT,aAAa,CAACC,QAAD,CAAjB,EAA6B;AACzB,WAAOA,QAAP;AACH;;AACDA,EAAAA,QAAQ,GAAGA,QAAQ,CAACS,WAAT,EAAX;;AACA,MAAI,CAACD,OAAO,CAACE,WAAb,EAA0B;AACtBV,IAAAA,QAAQ,GAAGA,QAAQ,CAACW,OAAT,CAAiBb,mBAAjB,EAAsCQ,UAAtC,CAAX;AACH;;AACD,SAAON,QAAQ,CAACW,OAAT,CAAiBf,YAAjB,EAA+BM,UAA/B,CAAP;AACH,CAVD;;AAWAV,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\nvar trimHyphen = function (match, prefix) { return prefix + \"-\"; };\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (!options.reactCompat) {\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n"]},"metadata":{},"sourceType":"script"}