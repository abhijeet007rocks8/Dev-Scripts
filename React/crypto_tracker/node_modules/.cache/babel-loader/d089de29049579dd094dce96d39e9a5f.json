{"ast":null,"code":"var _jsxFileName = \"/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\nexport const CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoContext, \"nt83bInLU7WilaAtUhlTlgjwyVY=\");\n\n_c = CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/CryptoContext.js"],"names":["React","createContext","useContext","useState","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,gBAAGH,aAAa,EAA5B;AAEA,OAAO,MAAMI,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;AAEA,sBACI,QAAC,MAAD,CAAQ,QAAR;AAAA,cACKG;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CATM;;GAAMD,a;;KAAAA,a;AAWb,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC7B,SAAOT,UAAU,CAACE,MAAD,CAAjB;AACH,CAFM;;IAAMO,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { useState } from 'react'\n\nconst Crypto = createContext()\n\nexport const CryptoContext = ({ children }) => {\n    const [currency, setCurrency] = useState(\"INR\")\n    const [symbol, setSymbol] = useState(\"₹\")\n\n    return (\n        <Crypto.Provider>\n            {children}\n        </Crypto.Provider>\n    );\n}\n\nexport const CryptoState = () => {\n    return useContext(Crypto)\n}\n"]},"metadata":{},"sourceType":"module"}