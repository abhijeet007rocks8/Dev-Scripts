{"ast":null,"code":"var domToReact = require('./lib/dom-to-react');\n\nvar attributesToProps = require('./lib/attributes-to-props');\n\nvar htmlToDOM = require('html-dom-parser'); // support backwards compatibility for ES Module\n\n\nhtmlToDOM =\n/* istanbul ignore next */\ntypeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\nvar domParserOptions = {\n  lowerCaseAttributeNames: false\n};\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - HTML string.\n * @param  {Object}   [options]               - Parser options.\n * @param  {Object}   [options.htmlparser2]   - htmlparser2 options.\n * @param  {Object}   [options.library]       - Library for React, Preact, etc.\n * @param  {Function} [options.replace]       - Replace method.\n * @return {JSX.Element|JSX.Element[]|String} - React element(s), empty array, or string.\n */\n\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  options = options || {};\n  return domToReact(htmlToDOM(html, options.htmlparser2 || domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\nHTMLReactParser.Element = require('domhandler/lib/node').Element; // support CommonJS and ES Modules\n\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/crypto_tracker/node_modules/html-react-parser/index.js"],"names":["domToReact","require","attributesToProps","htmlToDOM","default","domParserOptions","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","htmlparser2","Element","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,iBAAD,CAAvB,C,CAEA;;;AACAE,SAAS;AACP;AACA,OAAOA,SAAS,CAACC,OAAjB,KAA6B,UAA7B,GAA0CD,SAAS,CAACC,OAApD,GAA8DD,SAFhE;AAIA,IAAIE,gBAAgB,GAAG;AAAEC,EAAAA,uBAAuB,EAAE;AAA3B,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AACtC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIE,SAAJ,CAAc,iCAAd,CAAN;AACD;;AACD,MAAIF,IAAI,KAAK,EAAb,EAAiB;AACf,WAAO,EAAP;AACD;;AACDC,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,SAAOT,UAAU,CACfG,SAAS,CAACK,IAAD,EAAOC,OAAO,CAACE,WAAR,IAAuBN,gBAA9B,CADM,EAEfI,OAFe,CAAjB;AAID;;AAEDF,eAAe,CAACP,UAAhB,GAA6BA,UAA7B;AACAO,eAAe,CAACJ,SAAhB,GAA4BA,SAA5B;AACAI,eAAe,CAACL,iBAAhB,GAAoCA,iBAApC;AACAK,eAAe,CAACK,OAAhB,GAA0BX,OAAO,CAAC,qBAAD,CAAP,CAA+BW,OAAzD,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiBP,eAAjB;AACAM,MAAM,CAACC,OAAP,CAAeV,OAAf,GAAyBG,eAAzB","sourcesContent":["var domToReact = require('./lib/dom-to-react');\nvar attributesToProps = require('./lib/attributes-to-props');\nvar htmlToDOM = require('html-dom-parser');\n\n// support backwards compatibility for ES Module\nhtmlToDOM =\n  /* istanbul ignore next */\n  typeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\n\nvar domParserOptions = { lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - HTML string.\n * @param  {Object}   [options]               - Parser options.\n * @param  {Object}   [options.htmlparser2]   - htmlparser2 options.\n * @param  {Object}   [options.library]       - Library for React, Preact, etc.\n * @param  {Function} [options.replace]       - Replace method.\n * @return {JSX.Element|JSX.Element[]|String} - React element(s), empty array, or string.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (html === '') {\n    return [];\n  }\n  options = options || {};\n  return domToReact(\n    htmlToDOM(html, options.htmlparser2 || domParserOptions),\n    options\n  );\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\nHTMLReactParser.Element = require('domhandler/lib/node').Element;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;\n"]},"metadata":{},"sourceType":"script"}