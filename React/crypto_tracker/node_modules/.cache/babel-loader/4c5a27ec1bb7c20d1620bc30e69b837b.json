{"ast":null,"code":"var _jsxFileName = \"/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { HistoricalChart } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { chartDays } from \"../config/data\";\nimport { SelectButton } from \"./SelectButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicalData, setHistoricalData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = CryptoState();\n\n  const fetchHistoricData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, days, currency));\n    setHistoricalData(data.prices);\n  };\n\n  useEffect(() => {\n    fetchHistoricData();\n  }, [currency, days]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: !historicalData ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"gold\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: historicalData.map(coin => {\n              let date = new Date(coin[0]);\n              let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return days === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: historicalData.map(coin => coin[1]),\n              label: `Price ( Past ${days} Days ) in ${currency}`,\n              borderColor: \"#EEBC1D\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"space-around\",\n            width: \"100%\"\n          },\n          children: chartDays.map(day => /*#__PURE__*/_jsxDEV(SelectButton, {\n            children: day.label\n          }, day.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinInfo, \"KKk154Osgoos05xRLgyHWRbcgds=\", true);\n\n_c = CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinInfo.jsx"],"names":["Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CircularProgress","createTheme","makeStyles","ThemeProvider","axios","React","useEffect","useState","Line","HistoricalChart","CryptoState","chartDays","SelectButton","register","CoinInfo","coin","historicalData","setHistoricalData","days","setDays","currency","fetchHistoricData","data","get","id","prices","darkTheme","palette","primary","main","type","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","elements","point","radius","day","value"],"mappings":"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","sourcesContent":["import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from \"chart.js\";\n\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { HistoricalChart } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { chartDays } from \"../config/data\";\nimport { SelectButton } from \"./SelectButton\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport const CoinInfo = ({ coin }) => {\n    const [historicalData, setHistoricalData] = useState();\n    const [days, setDays] = useState(1);\n\n    const { currency } = CryptoState();\n\n    const fetchHistoricData = async () => {\n        const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n        setHistoricalData(data.prices);\n    };\n\n    useEffect(() => {\n        fetchHistoricData();\n    }, [currency, days]);\n\n    const darkTheme = createTheme({\n        palette: {\n            primary: {\n                main: \"#fff\",\n            },\n            type: \"dark\",\n        },\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        container: {\n            width: \"75%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 25,\n            padding: 40,\n            [theme.breakpoints.down(\"md\")]: {\n                width: \"100%\",\n                marginTop: 0,\n                padding: 20,\n                paddingTop: 0,\n            },\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div className={classes.container}>\n                {\n                    !historicalData ? (\n                        <CircularProgress\n                            style={{ color: \"gold\" }}\n                            size={250}\n                            thickness={1}\n                        />\n\n                    ) : (\n                        <>\n                            <Line\n                                data={{\n                                    labels: historicalData.map((coin) => {\n                                        let date = new Date(coin[0]);\n                                        let time =\n                                            date.getHours() > 12\n                                                ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                                                : `${date.getHours()}:${date.getMinutes()} AM`;\n                                        return days === 1 ? time : date.toLocaleDateString();\n                                    }),\n\n                                    datasets: [\n                                        {\n                                            data: historicalData.map((coin) => coin[1]),\n                                            label: `Price ( Past ${days} Days ) in ${currency}`,\n                                            borderColor: \"#EEBC1D\",\n                                        },\n                                    ],\n                                }}\n                                options={{\n                                    elements: {\n                                        point: {\n                                            radius: 1,\n                                        },\n                                    },\n                                }}\n\n                            />\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    marginTop: 20,\n                                    justifyContent: \"space-around\",\n                                    width: \"100%\"\n                                }}\n                            >\n                                {chartDays.map(day => (\n                                    <SelectButton\n                                    key={day.value}\n                                    >\n                                        {day.label}\n                                    </SelectButton>\n                                ))}\n                            </div>\n                        </>\n\n                    )\n                }\n            </div>\n        </ThemeProvider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}