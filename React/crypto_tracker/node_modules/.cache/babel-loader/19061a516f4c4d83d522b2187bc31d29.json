{"ast":null,"code":"var _jsxFileName = \"/home/kriptonian/Desktop/CodeMaster/react/crypto_tracker/src/CryptoContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\nexport const CryptoContext = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  useEffect(() => {\n    if (currency === \"INR\") {\n      setSymbol(\"₹\");\n    } else if (currency === \"USD\") {\n      setSymbol(\"$\");\n    }\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency,\n      symbol,\n      setCurrency\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryptoContext, \"Gq7De48h8abbN7rXPNWvFlysLIk=\");\n\n_c = CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/crypto_tracker/src/CryptoContext.jsx"],"names":["React","createContext","useContext","useEffect","useState","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,gBAAGJ,aAAa,EAA5B;AAEA,OAAO,MAAMK,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,QAAQ,KAAK,KAAhB,EAAuB;AACnBG,MAAAA,SAAS,CAAC,GAAD,CAAT;AACH,KAFD,MAGK,IAAIH,QAAQ,KAAK,KAAjB,EAAwB;AACzBG,MAAAA,SAAS,CAAC,GAAD,CAAT;AACH;AACJ,GAPQ,EAON,CAACH,QAAD,CAPM,CAAT;AAUA,sBACI,QAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAD;AAAUE,MAAAA,MAAV;AAAkBD,MAAAA;AAAlB,KAAxB;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBM;;GAAMD,a;;KAAAA,a;AAqBb,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC7B,SAAOV,UAAU,CAACG,MAAD,CAAjB;AACH,CAFM;;IAAMO,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext, useEffect } from 'react'\nimport { useState } from 'react'\n\nconst Crypto = createContext()\n\nexport const CryptoContext = ({ children }) => {\n    const [currency, setCurrency] = useState(\"INR\");\n    const [symbol, setSymbol] = useState(\"₹\");\n\n    useEffect(() => {\n        if(currency === \"INR\") {\n            setSymbol(\"₹\");\n        }\n        else if (currency === \"USD\") {\n            setSymbol(\"$\");\n        }\n    }, [currency]);\n    \n\n    return (\n        <Crypto.Provider value={{currency,symbol, setCurrency}}>\n            {children}\n        </Crypto.Provider>\n    );\n}\n\nexport const CryptoState = () => {\n    return useContext(Crypto)\n}\n"]},"metadata":{},"sourceType":"module"}