{"ast":null,"code":"var _jsxFileName = \"/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container, createTheme, LinearProgress, Table, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinTable = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const {\n    currency\n  } = CryptoState();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    setCoins(data);\n    setLoading(false);\n  };\n\n  console.log(coins);\n  useEffect(() => {\n    fetchCoins();\n  }, [currency]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff'\n      },\n      type: 'dark'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          margin: 18,\n          fontFamily: 'Montserrat'\n        },\n        children: \"Cryptocurrency Price by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for a cryptocurrency\",\n        variant: \"outlined\",\n        style: {\n          margin: 0,\n          width: '100%'\n        },\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            BackgroundColor: 'gold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: '#EEBC1D'\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: ['Coin', 'Price', 'Market Cap', '24h Change'].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: 'black',\n                  fontFamily: 'Montserrat',\n                  fontWeight: '700'\n                },\n                align: head === 'Coin' ? ' ' : 'right',\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinTable, \"WPokyF7EJ33IvXi1wWv9SYAGl80=\");\n\n_c = CoinTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinTable\");","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinTable.jsx"],"names":["Container","createTheme","LinearProgress","Table","TableCell","TableContainer","TableHead","TableRow","TextField","ThemeProvider","Typography","axios","React","useEffect","useState","CoinList","CryptoState","CoinTable","coins","setCoins","loading","setLoading","search","setSearch","currency","fetchCoins","data","get","console","log","darkTheme","palette","primary","main","type","textAlign","margin","fontFamily","width","e","target","value","BackgroundColor","backgroundColor","map","head","color","fontWeight"],"mappings":"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","sourcesContent":["import { Container, createTheme, LinearProgress, Table, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\n\nexport const CoinTable = () => {\n\n    const [coins, setCoins] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState(\"\");\n\n    const { currency } = CryptoState();\n\n    const fetchCoins = async () => {\n        setLoading(true);\n        const { data } = await axios.get(CoinList(currency));\n        setCoins(data);\n        setLoading(false);\n    };\n\n    console.log(coins);\n\n    useEffect(() => {\n        fetchCoins();\n    }, [currency]);\n\n    const darkTheme = createTheme({\n        palette: {\n            primary: {\n                main: '#fff',\n            },\n            type: 'dark',\n        }\n    })\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Container style={{ textAlign: \"center\" }}>\n                <Typography\n                    variant='h4'\n                    style={{ margin: 18, fontFamily: 'Montserrat' }}\n                >\n                    Cryptocurrency Price by Market Cap\n                </Typography>\n                <TextField\n                    label='Search for a cryptocurrency'\n                    variant='outlined'\n                    style={{ margin: 0, width: '100%' }}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n\n                <TableContainer>\n                    {\n                        loading ? (\n                            <LinearProgress style={{ BackgroundColor: 'gold' }} />\n                        ) : (\n                            <Table>\n                                <TableHead style={{ backgroundColor: '#EEBC1D' }}>\n                                    <TableRow>\n                                        {['Coin','Price','Market Cap','24h Change'].map((head) => (\n                                        <TableCell\n                                            style={{\n                                                color: 'black',\n                                                fontFamily: 'Montserrat',\n                                                fontWeight: '700',\n                                            }}\n                                            key={head}\n                                            align={head === 'Coin' ? ' ' : 'right'}\n                                        >\n                                            {head}\n                                        </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                            </Table>\n                        )\n                    }\n                </TableContainer>\n\n            </Container>\n        </ThemeProvider>\n    )\n} "]},"metadata":{},"sourceType":"module"}