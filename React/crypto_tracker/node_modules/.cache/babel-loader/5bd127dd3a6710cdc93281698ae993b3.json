{"ast":null,"code":"var _jsxFileName = \"/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container, createTheme, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Classnames } from 'react-alice-carousel';\nimport { useNavigate } from 'react-router-dom';\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { numberWithCommas } from './Banner/Carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinTable = () => {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const history = useNavigate();\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    setCoins(data);\n    setLoading(false);\n  };\n\n  console.log(coins);\n  useEffect(() => {\n    fetchCoins();\n  }, [currency]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff'\n      },\n      type: 'dark'\n    }\n  });\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()) || coin.symbol.toLowerCase().includes(search.toLowerCase()));\n  };\n\n  const useStyles = makeStyles(theme => ({}));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          margin: 18,\n          fontFamily: 'Montserrat'\n        },\n        children: \"Cryptocurrency Price by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for a cryptocurrency\",\n        variant: \"outlined\",\n        style: {\n          margin: 20,\n          width: '100%'\n        },\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            BackgroundColor: 'gold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: '#EEBC1D'\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: ['Coin', 'Price', '24h Change', 'Market Cap'].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: 'black',\n                  fontFamily: 'Montserrat',\n                  fontWeight: '700'\n                },\n                align: head === 'Coin' ? ' ' : 'right',\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handleSearch().map(row => {\n              const profit = row.price_change_percentage_24h > 0;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => history(`/coins/${row.id}`),\n                className: classes.row,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  style: {\n                    display: 'flex',\n                    gap: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row.name,\n                    height: \"50\",\n                    style: {\n                      marginBottom: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"column\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        textTransform: \"uppercase\",\n                        fontSize: 22\n                      },\n                      children: row.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"darkgrey\"\n                      },\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [symbol, \" \", numberWithCommas(row.market_cap.toString().slice(0, -6)), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                    fontWeight: 500\n                  },\n                  children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 49\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CoinTable, \"Asz0qxdmuAr0IcocYYYMKi9zEoA=\", true, function () {\n  return [useNavigate];\n});\n\n_c = CoinTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinTable\");","map":{"version":3,"sources":["/home/kriptonian/Desktop/CodeMaster/react/cryptocurrency_tracker/src/components/CoinTable.jsx"],"names":["Container","createTheme","LinearProgress","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","ThemeProvider","Typography","axios","React","useEffect","useState","Classnames","useNavigate","CoinList","CryptoState","numberWithCommas","CoinTable","coins","setCoins","loading","setLoading","search","setSearch","history","currency","symbol","fetchCoins","data","get","console","log","darkTheme","palette","primary","main","type","handleSearch","filter","coin","name","toLowerCase","includes","useStyles","theme","classes","textAlign","margin","fontFamily","width","e","target","value","BackgroundColor","backgroundColor","map","head","color","fontWeight","row","profit","price_change_percentage_24h","id","display","gap","image","marginBottom","flexDirection","textTransform","fontSize","market_cap","toString","slice","toFixed"],"mappings":"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","sourcesContent":["import { Container, createTheme, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Classnames } from 'react-alice-carousel';\nimport { useNavigate } from 'react-router-dom';\nimport { CoinList } from '../config/api';\nimport { CryptoState } from '../CryptoContext';\nimport { numberWithCommas } from './Banner/Carousel';\n\nexport const CoinTable = () => {\n\n    const [coins, setCoins] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const history = useNavigate();\n\n    const { currency, symbol } = CryptoState();\n\n    const fetchCoins = async () => {\n        setLoading(true);\n        const { data } = await axios.get(CoinList(currency));\n        setCoins(data);\n        setLoading(false);\n    };\n\n    console.log(coins);\n\n    useEffect(() => {\n        fetchCoins();\n    }, [currency]);\n\n    const darkTheme = createTheme({\n        palette: {\n            primary: {\n                main: '#fff',\n            },\n            type: 'dark',\n        }\n    })\n\n    const handleSearch = () => {\n        return coins.filter((coin) => (\n            coin.name.toLowerCase().includes(search.toLowerCase()) || coin.symbol.toLowerCase().includes(search.toLowerCase())\n        ));\n    };\n\n    const useStyles = makeStyles((theme) => ({\n\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <Container style={{ textAlign: \"center\" }}>\n                <Typography\n                    variant='h4'\n                    style={{ margin: 18, fontFamily: 'Montserrat' }}\n                >\n                    Cryptocurrency Price by Market Cap\n                </Typography>\n                <TextField\n                    label='Search for a cryptocurrency'\n                    variant='outlined'\n                    style={{ margin: 20, width: '100%' }}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n\n                <TableContainer>\n                    {\n                        loading ? (\n                            <LinearProgress style={{ BackgroundColor: 'gold' }} />\n                        ) : (\n                            <Table>\n                                <TableHead style={{ backgroundColor: '#EEBC1D' }}>\n                                    <TableRow>\n                                        {['Coin', 'Price','24h Change', 'Market Cap'].map((head) => (\n                                            <TableCell\n                                                style={{\n                                                    color: 'black',\n                                                    fontFamily: 'Montserrat',\n                                                    fontWeight: '700',\n                                                }}\n                                                key={head}\n                                                align={head === 'Coin' ? ' ' : 'right'}\n                                            >\n                                                {head}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {handleSearch().map(row => {\n                                        const profit = row.price_change_percentage_24h > 0;\n\n                                        return (\n                                            <TableRow\n                                                onClick={() => history(`/coins/${row.id}`)}\n                                                className={classes.row}\n                                                key={row.name}\n                                            >\n                                                <TableCell\n                                                    component='th'\n                                                    scope='row'\n                                                    style={{\n                                                        display: 'flex',\n                                                        gap: 15,\n                                                    }}\n                                                >\n                                                    <img\n                                                        src={row?.image}\n                                                        alt={row.name}\n                                                        height='50'\n                                                        style={{ marginBottom: 10 }}\n                                                    />\n                                                    <div\n                                                        style={{ display: \"flex\", flexDirection: \"column\" }}\n                                                    >\n                                                        <span\n                                                            style={{\n                                                                textTransform: \"uppercase\",\n                                                                fontSize: 22,\n                                                            }}\n                                                        >\n                                                            {row.symbol}\n                                                        </span>\n                                                        <span style={{ color: \"darkgrey\" }}>\n                                                            {row.name}\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                \n                                                <TableCell align=\"right\">\n                                                    {symbol}{\" \"}\n                                                    {numberWithCommas(\n                                                        row.market_cap.toString().slice(0, -6)\n                                                    )}\n                                                    M\n                                                </TableCell>\n                                                \n                                                <TableCell\n                                                    align='right'\n                                                    style={{\n                                                        color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                                                        fontWeight: 500,\n                                                    }}\n                                                >\n                                                    {profit && \"+\"}\n                                                    {row.price_change_percentage_24h.toFixed(2)}%\n                                                </TableCell>\n\n                                            </TableRow>\n                                        )\n                                    })}\n                                </TableBody>\n                            </Table>\n                        )\n                    }\n                </TableContainer>\n\n            </Container>\n        </ThemeProvider>\n    )\n} "]},"metadata":{},"sourceType":"module"}